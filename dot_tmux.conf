# -- basic config -------------------------------------------------------------------

# prefix key C-s
unbind C-a
set -g prefix C-s

# Use $TERM (configured in wezterm) and enable undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# https://github.com/3rd/image.nvim/?tab=readme-ov-file#tmux
# This is needed by the image.nvim plugin
# set -gq allow-passthrough on
# This is related to the `tmux_show_only_in_active_window = true,` config in
# image.nvim
set -g visual-activity off

set -g allow-passthrough all
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# default command
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# tmux-thumbs settings
# set -g @fingers-key f
# Overrides matching file paths with :[line]:[col] at the end
# set -g @fingers-pattern-0 "(([.\\w\\-~\\$@]+)(\\/?[\\w\\-@]+)+\\/?)\\.([\\w]+)(:\\d*:\\d*)?"
# Launches helper script on Ctrl+[key] in fingers mode
# set -g @fingers-ctrl-action "xargs -I {} tmux run-shell 'cd #{pane_current_path}; ~/.tmux/plugins/tmux-open-nvim/scripts/ton {} > ~/.tmux/plugins/tmux-open-nvim/ton.log'"s
# -- app bindings -----------------------------------------------------------------------

# edit nvim configuration
bind v new-window -n "~/.config/nvim/" "cd ~/.config/nvim && nvim ~/.config/nvim/lua/ && tmux display \"nvim config updated\""

# open notes
bind n new-window -n "zettel" "tmuxp load -y zettel"
# open wezterm config
bind a new-window -n "~/.config/wezterm/" "nvim ~/.config/wezterm/wezterm.lua"

# edit zsh configuration
bind C-z send-keys "exec zsh" Enter \; display "zsh reloaded"

# Reload tmux config with <prefix>-r.
bind-key r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Edit tmux config with <prefix>-e.
bind-key e new-window -n "TMUX CONFIG" "nvim ~/.tmux.conf \; source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'"

bind C-n send-keys ":q!" Enter \; split-window -h 'nvim'

# clear scroll-buffer
bind-key k clear-history; bind k send-keys " clear"\; send-keys "Enter"

bind-key "T" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 55%,60% \
	  --color=\$(defaults read -globalDomain AppleInterfaceStyle &> /dev/null && echo $FZF_MOCHA_COLORS || echo $FZF_LATTE_COLORS) \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
)\""

bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# - pane & window & session bindings --------------------------------------------------------------------------

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to 1.
bind-key -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 1 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 1 scroll-down

# Use Vim keybindings in copy mode.
set-window-option -g mode-keys vi

set-window-option -g mouse on

# Order sessions alphabetically when switching.
bind-key s choose-tree -sZ -O name

# Split panes using | and -.
unbind-key '"'
unbind-key %
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# Vim-like pane resizing.
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Create new session.
bind-key C-c new-session -c "~"

# Search for a session.
bind-key C-f command-prompt -p find-session 'switch-client -t %%'

# -- options ------------------------------------------------------------------------

# Set scroll history to 100,000 lines.
set-option -g history-limit 100000

# Lower the time it takes to register ESC.
set -s escape-time 0

# number windows starting at 1
set-option -g base-index 1

# Mouse mode on.
set -g mouse on

# Allow outside applications (like a nested Tmux session) to set the clipboard.
set -g set-clipboard on

# Renumber windows when a window is closed.
set -g renumber-windows on

# Turn on activity monitors.
set -g monitor-activity on
set -g visual-activity off

# Automatically start tmux on boot
set -g @continuum-boot 'off'

# Auto sessions.
set -g @continuum-save-interval '10' # save every 10 minutes
# set -g @continuum-restore 'on' # restore on startup

# vim-tmux integration
set-option -g focus-events on

# - Theme --------------------------------------------------------------------------

set-option -g status "on"
set -g status-position top

set -g @catppuccin_window_left_separator "ÓÇ∫‚ñà"
set -g @catppuccin_window_right_separator "‚ñàÓÇº "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator "  ÓÇ∫‚ñà"

set -g @catppuccin_window_default_fill "number"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_date_time_text "%H:%M"
# set -g @catppuccin_window_current_text "#{pane_current_path}"

set -g @catppuccin_window_status_enable "yes"

set -g @catppuccin_status_modules "application session"
set -g @catppuccin_status_left_separator  "ÓÇ∂"
set -g @catppuccin_status_right_separator "ÓÇ¥ "
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"

# dynamic theme dark/light modes
set -g @dark-notify-theme-path-light '~/set_tmux_theme_latte.sh'
set -g @dark-notify-theme-path-dark '~/set_tmux_theme_mocha.sh'

# - List of plugins ---------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux' # theme
set -g @plugin 'tmux-plugins/tmux-battery' # battery status
set -g @plugin 'tmux-plugins/tmux-cpu' # cpu status
set -g @plugin 'tmux-plugins/tmux-yank' # copy to clipboard
set -g @plugin 'tmux-plugins/tmux-resurrect' # save/restore tmux sessions
set -g @plugin 'tmux-plugins/tmux-continuum' # auto save/restore tmux sessions on close/open tmux
set -g @plugin 'erikw/tmux-dark-notify' # dynamic theme dark/light modes
set -g @plugin 'trevarj/tmux-open-nvim' # open files in nvim
# set -g @plugin 'Morantron/tmux-fingers'

run -b '~/.tmux/plugins/tpm/tpm'
